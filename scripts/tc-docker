#!/bin/sh
#
# @file tc-docker
# @description tc-docker, helper script for building innovarew/docker-tinycore
# @author innovarew <innovarew at github.com> (c) Copyright 2022 GPLv2
# @copyright All rights reserved. Read LICENSE.txt file for the license terms.
# @url github.com/innovarew/docker-tinycore
# SPDX-License-Identifier: GPL-2.0-or-later
#
# Changelog:
#
# [dd/mm/yyyy]        [author]
# [brief description]
#
# 26/08/2022        innovarew
# v1.0 Initial version
#
# 26/08/2023        innovarew
# v1.1 Bump version x86_64
#
# 02/02/2024        innovarew
# v1.2 Bump version x86
#

PROGNAME=${0##*/}
PROGVERSION=v1.2
PROGAUTHOR="innovarew"
PROGURL="https://github.com/innovarew/docker-tinycore"

set -euf

TC_ARCH=${TC_ARCH:-x86_64}
TC_URL=${TC_URL:-http://tinycorelinux.net/15.x/${TC_ARCH}}
TC_ISO=${TC_ISO:-$TC_URL/release/TinyCorePure64-current.iso}
TCZ_URL=$TC_URL/tcz
TC_CPIO=${TC_CPIO:-corepure64.gz}

if [ "$TC_ARCH" = "x86" ]; then
    TC_CPIO=core.gz
    TC_ISO=$TC_URL/release/TinyCore-current.iso
fi

TCE_DIR=$PWD/data/tce/optional
if grep -qi tinycore /etc/os-release
then
    TCE_DIR=/tmp/tce/optional
fi
[ ! -d $TCE_DIR ] && mkdir -p $TCE_DIR

tce_rootfs_init()
{
    TC_VER=$(echo "$TC_URL" | awk -F/ '{print $4"-"$5}')
    TC_TAR="rootfs-$TC_VER.tar.xz"
    TC_PATCH="rootfs-$TC_VER.patch"

    echo "# $TC_ISO"
    (
        rm -r data/tce
        mkdir -p "$TCE_DIR"

        rm -rf data/root
        rm -rf data/tinycore

        mkdir -p data
        cd data

        # unpack rootfs core.gz
        tce_rootfs_unpack "$@"

        # rootfs contains .ko.gz not used by docker
        find "$PWD/root/" -name '*.ko.gz' -exec rm {} \;

        # get unsquashfs into container to unpack tcz
        tce_install liblzma.tcz "$PWD/root/"
        tce_install squashfs-tools.tcz "$PWD/root/"

        patch -p2 < "$TC_PATCH"
    )

    (cd data/root; tar cJf "../$TC_TAR" .)
}

tce_rootfs_unpack()
{
    ISO_FILE="${TC_ISO##*/}"

    wget -qc "$TC_ISO"
    # wget -qc "$TC_ISO.md5.txt" && md5sum -c $(basename "$TC_ISO.md5.txt")

    if [ ! -d "tinycore" ]
    then
        mkdir -p tinycore
        7z x -otinycore "$ISO_FILE" >/dev/null
        mkdir -p root
        (cd root; zcat "../tinycore/boot/$TC_CPIO" | cpio --extract)
    fi
}

tce_cddir()
{
    if [ -n "$PWD" -a "$PWD" != "$TCE_DIR" ]
    then
        cd $TCE_DIR
    fi
}

UNSQUASHFS=unsquashfs
tce_download()
{
    UNSQUASHFS= tce_install "$@"
}

# usage: tce_install squashfs-tools.tcz /
tce_install()
{
    [ $# -lt 2 ] && usage

    local app=$1
    local root=$2

    if [ -e "$root/usr/local/tce.installed/${app%.tcz}" ]
    then
        usage "warn: $app already installed in $root"
    fi

    (
        tce_cddir

        if wget -qc "$TCZ_URL/$app.dep"
        then
            for dep in $(cat "$app.dep")
            do
                tce_install $dep $root
            done
        fi

        wget -qc "$TCZ_URL/$app"
        wget -qc "$TCZ_URL/$app.md5.txt"
        [ -e "$app.md5.txt" ] && md5sum -c "$app.md5.txt"

        if [ -n "$UNSQUASHFS" ]
        then
            unsquashfs -n -d "$root" -f "$app" >/dev/null

            # update system
            mkdir -p "$root/usr/local/tce.installed/"
            touch "$root/usr/local/tce.installed/${app%.tcz}"
        fi

        # update libs
        if [ -w /etc/ld.so.cache ]
        then
            ldconfig
        fi
    )
}

tce_info()
{
    [ $# -lt 1 ] && usage
    local app=$1
    (
        tce_cddir
        [ ! -e "$app.info" ] && wget -qc "$TCZ_URL/$app.info"
        cat "$app.info"
    )
}

tce_list()
{
    [ $# -lt 1 ] && usage
    local app=$1
    (
        tce_cddir
        [ ! -e "$app.list" ] && wget -qc "$TCZ_URL/$app.list"
        cat "$app.list"
    )
}

tce_dep()
{
    [ $# -lt 1 ] && usage
    local app=$1
    (
        tce_cddir
        [ ! -e "$app.list" ] && wget -qc "$TCZ_URL/$app.dep"
        cat "$app.dep"
    )
}

tce_search()
{
    (
        tce_cddir
        wget -qc "$TCZ_URL"
        cat "${TCZ_URL##*/}"
    )
}

usage()
{
    if [ $# -eq 0 ]
    then
        echo "usage: $PROGNAME [tce_rootfs_init|tce_install] # @version $PROGVERSION (c) $PROGAUTHOR $PROGURL";
        exit;
    else
        echo "$@"
        return
    fi
}

main()
{
    [ $# -lt 1 ] && usage

    "$@"
}

main "$@"
